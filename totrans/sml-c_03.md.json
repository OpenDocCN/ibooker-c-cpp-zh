["```cpp\n#include <stdio.h>\n\nint main() {\n  printf(\" 1 == 1  : %d\\n\", 1 == 1);\n  printf(\" 1 != 1  : %d\\n\", 1 != 1);\n  printf(\" 5 < 10  : %d\\n\", 5 < 10);\n  printf(\" 5 > 10  : %d\\n\", 5 > 10);\n  printf(\"12 <= 10 : %d\\n\", 12 <= 10);\n  printf(\"12 >= 10 : %d\\n\", 12 >= 10);\n}\n```", "```cpp\nch03$ gcc booleans.c\nch03$ ./a.out\n 1 == 1  : 1\n 1 != 1  : 0\n 5 < 10  : 1\n 5 > 10  : 0\n12 <= 10 : 0\n12 >= 10 : 1\n```", "```cpp\n// For single statements, like a printf():\nif (test)\n  printf(\"Test returned true!\\n\");\n\n// or for multiple statements:\nif (test) {\n  // body goes here\n}\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int units = 0;\n  printf(\"Please enter the number of units found: \");\n  scanf(\"%d\", &units);\n  if (units < 0) { // start of our \"if\" code block\n    printf(\"  *** Warning: possible lost items ***\\n\");\n  } // end of our \"if\" code block\n  printf(\"%d units received.\\n\", units);\n}\n\n```", "```cpp\nch03$ gcc warnings.c\nch03$ ./a.out\nPlease enter the number of units found: 12\n12 units received.\n\nch03$ ./a.out\nPlease enter the number of units found: 7\n7 units received.\n\nch03$ ./a.out\nPlease enter the number of units found: -4\n  *** Warning: possible lost items ***\n-4 units received.\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  if (1 == 1) {\n    printf(\" 1 == 1\\n\");\n  }\n  if (1 != 1) {\n    printf(\" 1 != 1\\n\");\n  }\n  if (5 < 10) {\n    printf(\" 5 < 10\\n\");\n  }\n  if (5 > 10) {\n    printf(\" 5 > 10\\n\");\n  }\n  if (12 <= 10) {\n    printf(\"12 <= 10\\n\");\n  }\n  if (12 >= 10) {\n    printf(\"12 >= 10\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc booleans2.c\nch03$ ./a.out\n 1 == 1\n 5 < 10\n12 >= 10\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  if (1 == 1) {\n    printf(\" 1 == 1\\n\");\n  } else {\n    printf(\" *** Yikes! 1 == 1 returned false\\n\");\n  }\n  if (1 != 1) {\n    printf(\" *** Yikes! 1 != 1 returned true\\n\");\n  } else {\n    printf(\" 1 != 1  is false\\n\");\n  }\n  if (5 < 10) {\n    printf(\" 5 < 10\\n\");\n  } else {\n    printf(\" *** Yikes! 5 < 10 returned false\\n\");\n  }\n  if (5 > 10) {\n    printf(\" *** Yikes! 5 > 10 returned true\\n\");\n  } else {\n    printf(\" 5 > 10  is false\\n\");\n  }\n  if (12 <= 10) {\n    printf(\" *** Yikes! 12 <= 10 returned false\\n\");\n  } else {\n    printf(\"12 <= 10 is false\\n\");\n  }\n  if (12 >= 10) {\n    printf(\"12 >= 10\\n\");\n  } else {\n    printf(\" *** Yikes! 12 >= 10 returned false\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc booleans3.c\nch03$ ./a.out\n 1 == 1\n 1 != 1  is false\n 5 < 10\n 5 > 10  is false\n12 <= 10 is false\n12 >= 10\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int score = 0;\n  printf(\"Enter your score (1 - 100): \");\n  scanf(\"%d\", &score);\n  if (score > 100) {\n    printf(\"Bad score, must be between 1 and 100.\\n\");\n  } else if (score >= 85) {\n    printf(\"Great! 3 stars!\\n\");\n  } else if (score >= 50) {\n    printf(\"Good score! 2 stars.\\n\");\n  } else if (score >= 1) {\n    printf(\"You completed the game. 1 star.\\n\");\n  } else {\n    // Only here because we have a negative score\n    printf(\"Impossible score, must be positive.\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc stars.c\nch03$ ./a.out\nEnter your score (1 - 100): 72\nGood score! 2 stars.\n\nch03$ ./a.out\nEnter your score (1 - 100): 99\nGreat! 3 stars!\n\nch03$ ./a.out\nEnter your score (1 - 100): 4567\nBad score, must be between 1 and 100.\n\nch03$ ./a.out\nEnter your score (1 - 100): 42\nYou completed the game. 1 star.\n\nch03$ ./a.out\nEnter your score (1 - 100): -42\nImpossible score, must be positive.\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int score = 0;\n  printf(\"Enter your score (1 - 100): \");\n  scanf(\"%d\", &score);\n  if (score > 100) {\n    printf(\"Bad score, must be between 1 and 100.\\n\");\n  } else if (score == 100) {\n    printf(\"Perfect score!! 4 stars!!\\n\");\n  } else if (score >= 85) {\n    printf(\"Great! 3 stars!\\n\");\n  } else if (score >= 50) {\n    printf(\"Good score! 2 stars.\\n\");\n  } else if (score >= 1) {\n    printf(\"You completed the game. 1 star.\\n\");\n  } else {\n    // Only here because we have a negative score\n    printf(\"Impossible score, must be positive.\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc stars2.c\nch03$ ./a.out\nEnter your score (1 - 100): 100\nPerfect score!! 4 stars!!\n\nch03$ ./a.out\nEnter your score (1 - 100): 64\nGood score! 2 stars.\n\nch03$ ./a.out\nEnter your score (1 - 100): 101\nBad score, must be between 1 and 100.\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  if (1 == 1)\n    printf(\" 1 == 1\\n\");\n  else\n    printf(\" *** Yikes! 1 == 1 returned false\\n\");\n  if (1 != 1)\n    printf(\" *** Yikes! 1 != 1 returned true\\n\");\n  else\n    printf(\" 1 != 1  is false\\n\");\n  // ...\n}\n```", "```cpp\nint x;\nprintf(\"Please enter an integer: \");\nscanf(\"%i\", x);\nif (x) {\n  printf(\"Thanks, you gave us a great number!\\n\");\n} else {\n  printf(\"Oh. A zero. Well, thanks for \\\"nothing\\\"! ;)\\n\");\n}\n```", "```cpp\nint first_card = 10;\nint second_card = 7;\nint total = first_card + second_card;\n\nif (total = 21) {\n  printf(\"Blackjack! %d\\n\", total);\n}\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int place;\n  printf(\"Enter your place: \");\n  scanf(\"%i\", &place);\n  switch (place) {\n  case 1:\n    printf(\"1st place! Gold!\\n\");\n    break;\n  case 2:\n    printf(\"2nd place! Silver!\\n\");\n    break;\n  case 3:\n    printf(\"3rd place! Bronze!\\n\");\n    break;\n  }\n}\n```", "```cpp\nch03$ gcc medals.c\nch03$ ./a.out\nEnter your place: 2\n2nd place! Silver!\n\nch03$ ./a.out\nEnter your place: 1\n1st place! Gold!\n\nch03$ ./a.out\nEnter your place: 3\n3rd place! Bronze!\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int place;\n  printf(\"Enter your place: \");\n  scanf(\"%i\", &place);\n  switch (place) {\n  case 1:\n    printf(\"1st place! Gold!\\n\");\n  case 2:\n    printf(\"2nd place! Silver!\\n\");\n  case 3:\n    printf(\"3rd place! Bronze!\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc medals2.c\nch03$ ./a.out\nEnter your place: 2\n2nd place! Silver!\n3rd place! Bronze!\n\nch03$ ./a.out\nEnter your place: 1\n1st place! Gold!\n2nd place! Silver!\n3rd place! Bronze!\n\nch03$ ./a.out\nEnter your place: 3\n3rd place! Bronze!\n```", "```cpp\nprintf(\"Describing %d:\\n\", someNumber);\nswitch(someNumber) {\n  case 2:\n    printf(\"  only even prime\\n\");\n    break;\n  case 3:\n  case 5:\n  case 7:\n    printf(\"  prime\\n\");\n  case 1:\n  case 9:\n    // 1 isn't often described as prime, so we'll just let it be odd\n    printf(\"  odd\\n\");\n    break;\n  case 4:\n  case 6:\n  case 8:\n  case 10:\n    printf(\"  even\\n\");\n    break;\n}\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int place;\n  printf(\"Enter your place: \");\n  scanf(\"%i\", &place);\n  switch (place) {\n  case 1:\n    printf(\"1st place! Gold!\\n\");\n    break;\n  case 2:\n    printf(\"2nd place! Silver!\\n\");\n    break;\n  case 3:\n    printf(\"3rd place! Bronze!\\n\");\n    break;\n  default:\n    printf(\"Sorry, you didn't make the podium.\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc medals3.c\nch03$ ./a.out\nEnter your place: 8\nSorry, you didn't make the podium.\n\nch03$ ./a.out\nEnter your place: 88\nSorry, you didn't make the podium.\n\nch03$ ./a.out\nEnter your place: 5792384\nSorry, you didn't make the podium.\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int place;\n  printf(\"Enter your place: \");\n  scanf(\"%i\", &place);\n  switch (place) {\n  case 1:\n    printf(\"1st place! Gold!\\n\");\n    break;\n  case 2:\n    printf(\"2nd place! Silver!\\n\");\n    break;\n  case 3:\n    printf(\"3rd place! Bronze!\\n\");\n    break;\n  case 4:\n  case 5:\n  case 6:\n  case 7:\n  case 8:\n  case 9:\n  case 10:\n    printf(\"Top 10! Congrats!\\n\");\n    break;\n  default:\n    printf(\"Sorry, you didn't make the podium.\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc medals4.c\nch03$ ./a.out\nEnter your place: 4\nTop 10! Congrats!\n\nch03$ ./a.out\nEnter your place: 1\n1st place! Gold!\n\nch03$ ./a.out\nEnter your place: 20\nSorry, you didn't make the podium.\n\nch03$ ./a.out\nEnter your place: 7\nTop 10! Congrats!\n```", "```cpp\nint winner = (bid1 < bid2) ? bid1 : bid2;\n```", "```cpp\nint winner;\nif (bid1 < bid2) {\n  winner = bid1;\n} else {\n  winner = bid2;\n}\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  printf(\" 1 == 1  : %s\\n\", 1 == 1 ? \"true\" : \"false\");\n  printf(\" 1 != 1  : %s\\n\", 1 != 1 ? \"true\" : \"false\");\n  printf(\" 5 < 10  : %s\\n\", 5 < 10 ? \"true\" : \"false\");\n  printf(\" 5 > 10  : %s\\n\", 5 > 10 ? \"true\" : \"false\");\n  printf(\"12 <= 10 : %s\\n\", 12 <= 10 ? \"true\" : \"false\");\n  printf(\"12 >= 10 : %s\\n\", 12 >= 10 ? \"true\" : \"false\");\n}\n```", "```cpp\nch03$ gcc booleans4.c\nch03$ ./a.out\n 1 == 1  : true\n 1 != 1  : false\n 5 < 10  : true\n 5 > 10  : false\n12 <= 10 : false\n12 >= 10 : true\n```", "```cpp\nch03$ gcc ten.c\nch03$ ./a.out\nLoop iteration: 1\nLoop iteration: 2\nLoop iteration: 3\nLoop iteration: 4\nLoop iteration: 5\nLoop iteration: 6\nLoop iteration: 7\nLoop iteration: 8\nLoop iteration: 9\nLoop iteration: 10\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  printf(\"Print only even values from 2 to 10:\\n\");\n  for (int i = 2; i <= 10; i = i + 2) {\n    printf(\"  %i\\n\", i);\n  }\n  printf(\"\\nCount down from 5 to 1:\\n\");\n  for (int j = 5; j > 0; j = j - 1) {\n    printf(\"  %i\\n\", j);\n  }\n}\n```", "```cpp\nch03$ gcc more_for.c\nch03$ ./a.out\nPrint only even values from 2 to 10:\n  2\n  4\n  6\n  8\n  10\n\nCount down from 5 to 1:\n  5\n  4\n  3\n  2\n  1\n```", "```cpp\nvar = var op value\n\n// Examples\ni = i + 1\ny = y * 5\ntotal = total - 1\n```", "```cpp\nvar op= value\n\n// Converted examples\ni += 1\ny *= 5\ntotal -= 1\n```", "```cpp\nvar++ or var--\n\n// Further converted examples\ni++\ntotal--\n```", "```cpp\n  for (int x = 1; x == 11; x++) {\n    // ....\n  }\n```", "```cpp\n  for (int countdown = 10; countdown > 0; countdown++) {\n    // ....\n  }\n```", "```cpp\n  for (int bad = 1, bad < 10, bad++) {\n    // ....\n  }\n\n  for (int good = 1; good < 10; good++) {\n    // ....\n  }\n```", "```cpp\nch03$ gcc bad_ten.c\nten.c: In function ‘main’:\nten.c:4:23: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ before ‘<=’ token\n    4 |   for (int bad = 1, bad <= 10, bad++) {\n      |                     ^~\nten.c:7:1: error: expected expression before ‘}’ token\n    7 | }\n      | ^\nten.c:7:1: error: expected expression before ‘}’ token\nten.c:7:1: error: expected expression before ‘}’ token\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int grade;\n  float total = 0.0;\n  int count = 0;\n  printf(\"Please enter a grade between 1 and 100\\. Enter 0 to quit: \");\n  scanf(\"%i\", &grade);\n  while (grade != 0) {\n    total += grade;\n    count++;\n    printf(\"Enter another grade (0 to quit): \");\n    scanf(\"%i\", &grade);\n  }\n  if (count > 0) {\n    printf(\"\\nThe final average is %.2f\\n\", total / count);\n  } else {\n    printf(\"\\nNo grades were entered.\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc average.c\nch03$ ./a.out\nPlease enter a grade between 1 and 100\\. Enter 0 to quit: 82\nEnter another grade (0 to quit): 91\nEnter another grade (0 to quit): 77\nEnter another grade (0 to quit): 43\nEnter another grade (0 to quit): 14\nEnter another grade (0 to quit): 97\nEnter another grade (0 to quit): 0\n\nThe final average is 67.33\n\nch03$ ./a.out\nPlease enter a grade between 1 and 100\\. Enter 0 to quit: 0\n\nNo grades were entered.\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int grade;\n  float total = 0.0;\n  int count = 0;\n  do {\n    printf(\"Enter a grade between 1 and 100 (0 to quit): \");\n    scanf(\"%i\", &grade);\n    total += grade;\n    count++;\n  } while (grade != 0);\n  // We end up counting the sentinel as a grade, so undo that\n  count--;\n\n  if (count > 0) {\n    printf(\"\\nThe final average is %.2f\\n\", total / count);\n  } else {\n    printf(\"\\nNo grades were entered.\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc average2.c\nch03$ ./a.out\nEnter a grade between 1 and 100 (0 to quit): 82\nEnter a grade between 1 and 100 (0 to quit): 91\nEnter a grade between 1 and 100 (0 to quit): 77\nEnter a grade between 1 and 100 (0 to quit): 43\nEnter a grade between 1 and 100 (0 to quit): 14\nEnter a grade between 1 and 100 (0 to quit): 97\nEnter a grade between 1 and 100 (0 to quit): 0\n\nThe final average is 67.33\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int grade;\n  float total = 0.0;\n  int count = 0;\n  do {\n    printf(\"Enter a grade between 1 and 100 (0 to quit): \");\n    scanf(\"%i\", &grade);\n    if (grade >= 1 && grade <= 100) {\n      // Valid! Count it.\n      total += grade;\n      count++;\n    } else if (grade != 0) {\n      // Not valid, and not our sentinel, so print an error and continue.\n      printf(\"   *** %d is not a valid grade. Skipping.\\n\", grade);\n    }\n  } while (grade != 0);\n\n  if (count > 0) {\n    printf(\"\\nThe final average is %.2f\\n\", total / count);\n  } else {\n    printf(\"\\nNo grades were entered.\\n\");\n  }\n}\n```", "```cpp\nch03$ gcc average3.c\nch03$ ./a.out\nEnter a grade between 1 and 100 (0 to quit): 82\nEnter a grade between 1 and 100 (0 to quit): -82\n   *** -82 is not a valid grade. Skipping.\nEnter a grade between 1 and 100 (0 to quit): 43\nEnter a grade between 1 and 100 (0 to quit): 14\nEnter a grade between 1 and 100 (0 to quit): 9101\n   *** 9101 is not a valid grade. Skipping.\nEnter a grade between 1 and 100 (0 to quit): 97\nEnter a grade between 1 and 100 (0 to quit): 0\n\nThe final average is 59.00\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int tableSize = 10;\n  for (int row = 1; row <= tableSize; row++) {\n    for (int col = 1; col <= tableSize; col++) {\n      printf(\"%4d\", row * col);\n    }\n    printf(\"\\n\"); // final newline to move to the next row\n  }\n}\n```", "```cpp\nch03$ gcc multiplication.c\nch03$ ./a.out\n   1   2   3   4   5   6   7   8   9  10\n   2   4   6   8  10  12  14  16  18  20\n   3   6   9  12  15  18  21  24  27  30\n   4   8  12  16  20  24  28  32  36  40\n   5  10  15  20  25  30  35  40  45  50\n   6  12  18  24  30  36  42  48  54  60\n   7  14  21  28  35  42  49  56  63  70\n   8  16  24  32  40  48  56  64  72  80\n   9  18  27  36  45  54  63  72  81  90\n  10  20  30  40  50  60  70  80  90 100\n```", "```cpp\n  for (int x = -5; x <= 5; x++) {\n    for (int y = -5; y <= 5; y++) {\n      for (int z = -5; z <= 5; z++) {\n        // Do something with your 3D (x, y, z) coordinate\n        // or use even more nested elements like checking for the origin\n        if (x == 0 && y == 0 && z == 0) {\n          printf(\"We found the origin!\\n\");\n        }\n      }\n    }\n  }\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int tableSize;\n  printf(\"Please enter a size for your table (1 - 20): \");\n  scanf(\"%i\", &tableSize);\n  if (tableSize < 1 || tableSize > 20) {\n    printf(\"We can't make a table that size. Sorry!\\n\");\n    printf(\"We'll use the default size of 10 instead.\\n\");\n    tableSize = 10;\n  }\n  for (int row = 1; row <= tableSize; row++) {      ![1](Images/1.png)\n    // row and tableSize are both in scope\n    for (int col = 1; col <= tableSize; col++) {    ![1](Images/1.png)\n      // row, col, and tableSize are all in scope\n      printf(\"%4d\", row * col);                     ![2](Images/2.png)\n    }\n    // col is now _out_ of scope ![3](Images/3.png)\n    printf(\"\\n\"); // final newline to move to the next row\n  }\n  // row is out of scope now, too, but tableSize remains available }\n```", "```cpp\nch03$ gcc multiplication2.c\nmultiplication2.c: In function ‘main’:\nmultiplication2.c:19:20: error: ‘col’ undeclared (first use in this function)\n   19 |     printf(\"%d\\n\", col); // final newline to move to the next row\n      |                    ^~~\n```", "```cpp\n#include <stdio.h>\n\nint main() {\n  int tableSize, row, col;\n  printf(\"Please enter a size for your table (1 - 20): \");\n  scanf(\"%i\", &tableSize);\n  if (tableSize < 1 || tableSize > 20) {\n    printf(\"We can't make a table that size. Sorry!\\n\");\n    printf(\"We'll use the default size of 10 instead.\\n\");\n    tableSize = 10;\n  }\n  // Notice that since we declared row and col above, we do not\n  // include the \"int\" type declaration inside the for loops below\n  for (row = 1; row <= tableSize; row++) {\n    for (col = 1; col <= tableSize; col++) {\n      printf(\"%4d\", row * col);\n    }\n    printf(\"\\n\");\n  }\n  printf(\"\\nFinal variable values:\\n\");\n  printf(\"  row == %d\\n col == %d\\n tableSize == %d\\n\", row, col, tableSize);\n}\n```", "```cpp\nch03$ gcc multiplication3.c\nch03$ ./a.out\nPlease enter a size for your table (1 - 20): 5\n   1   2   3   4   5\n   2   4   6   8  10\n   3   6   9  12  15\n   4   8  12  16  20\n   5  10  15  20  25\n\nFinal variable values:\n  row == 6\n  col == 6\n  tableSize == 5\n```", "```cpp\n    exercises$ ./a.out\n    Please enter a size for your triangle (1 - 20): 5\n    *\n    **\n    ***\n    ****\n    *****\n    ```", "```cpp\n    exercises$ ./a.out\n    Please enter a size for your triangle (1 - 20): 5\n        *\n       * *\n      * * *\n     * * * *\n    * * * * *\n    ```", "```cpp\n    exercises$ ./a.out\n    Please enter a size for your table (1 - 20): 5\n         1   2   3   4   5\n     1   1   2   3   4   5\n     2   2   4   6   8  10\n     3   3   6   9  12  15\n     4   4   8  12  16  20\n     5   5  10  15  20  25\n    ```", "```cpp\n    exercises$ ./a.out\n    Guess a number between 1 and 50: 25\n    Too low! Try again.\n    Guess a number between 1 and 50: 38\n    Too low! Try again.\n    Guess a number between 1 and 50: 44\n    Too high! Try again.\n    Guess a number between 1 and 50: 42\n    *** Congratulations! You got it right! ***\n    ```", "```cpp\n    Start with two positive numbers, a and b\n    While b is not zero:\n      Is a greather than b?\n        Yes: a = a - b\n        No: b = b - a\n    Print a\n    ```"]